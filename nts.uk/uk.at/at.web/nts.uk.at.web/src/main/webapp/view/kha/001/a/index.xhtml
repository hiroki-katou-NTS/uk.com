<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:com="http://xmlns.jcp.org/jsf/component"
  xmlns:h="http://xmlns.jcp.org/jsf/html"
>
  <body>
    <ui:composition template="../../../../master/base.xhtml">
      <ui:define name="htmlHead">
        <com:scriptfile set="IGNITE" />
        <com:stylefile path="kha001.a.css" />
        <com:scriptfile path="kha001.a.vm.js" />
        <com:ValidatorScript>
          nts.uk.ctx.at.record.dom.workrecord.stampmanagement.support.RangeRegardedSupportStamp
        </com:ValidatorScript>
      </ui:define>

      <ui:define name="content">
        <div id="functions-area">
          <button
              class="proceed"
              tabindex="1"
              data-bind="text: $vm.$i18n('KHA001_1'), click: saveData, enable: $root.errors.isEmpty"
          ></button>
          <button
              tabindex="2"
              data-bind="text: $vm.$i18n('KHA001_2'), click: exportExcel, enable: $root.errors.isEmpty"
          ></button>
        </div>
        <div id="contents-area">
          <div class="table mb-5">
            <div class="cell cell-left">
              <div
                data-bind="ntsFormLabel: { required: true}, text: $vm.$i18n('KHA001_3')"
              ></div>
            </div>
            <div class="cell valign-center">
              <div id ="KHA001_3"
                  class="cf"
                  tabindex="3"
                  data-bind="ntsSwitchButton: {
                                name: '#[KHA001_3]',
                                options: switchItems,
                                optionsValue: 'code',
                                optionsText: 'name',
                                value: isUse,
                                required: true,
                                enable: true }"
              ></div>
            </div>
          </div>
          <div class="table mb-5">
            <div class="cell cell-left">
              <div
                data-bind="ntsFormLabel: { required: true}, text: $vm.$i18n('KHA001_5')"
              ></div>
            </div>
            <div class="cell valign-center">
              <input tabindex="4" class="inp-same-stamp-rance-in-minutes"
                data-bind="ntsNumberEditor:
                {
                  value: sameStampRanceInMinutes,
                  constraint: 'RangeRegardedSupportStamp',
                  enable: isUse() === 1
                }"
              />
            </div>
          </div>
          <div class="table mb-5">
            <div class="cell cell-left">
              <div
                data-bind="ntsFormLabel: {}, text: $vm.$i18n('KHA001_6')"
              ></div>
            </div>
            <div class="cell valign-center">
              <div class="accounting-of-move-time" id="combo-box" tabindex="5" data-bind="ntsComboBox: {
                name: '#[KHA001_6]',
                options: itemListEnum,
                optionsValue: 'code',
                visibleItemsCount: 5,
                value: accountingOfMoveTime,
                editable: false,
                enable: isUse,
                selectFirstIfNull: true,
                width: 150,
                columns: [
                  { prop: 'name', length: 2 }
                ]}">
              </div>
            </div>
          </div>
          <div class="table mb-5">
            <div class="cell cell-left">
              <div
                  data-bind="ntsFormLabel: { required: true}, text: $vm.$i18n('KHA001_7')"
              ></div>
            </div>
            <div class="cell valign-center">
              <div id="combo-box" tabindex="6" data-bind="ntsComboBox: {
                name: '#[KHA001_7]',
                options: itemListCbb,
                optionsValue: 'code',
                visibleItemsCount: 5,
                value: selectedCode,
                editable: false,
                enable: isUse,
                required: true,
                selectFirstIfNull: true,
                width: 74,
                columns: [
                    { prop: 'code', length: 2 }
                ]}">
              </div>
            </div>
            <label style="padding-left: 5px;">#{i18n.getText('KHA001_9')}</label>
          </div>
        </div>
      </ui:define>
    </ui:composition>
  </body>
</html>
