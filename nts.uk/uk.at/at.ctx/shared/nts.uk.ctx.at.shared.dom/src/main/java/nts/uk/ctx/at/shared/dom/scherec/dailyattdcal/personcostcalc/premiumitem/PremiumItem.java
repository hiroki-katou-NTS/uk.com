package nts.uk.ctx.at.shared.dom.scherec.dailyattdcal.personcostcalc.premiumitem;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import lombok.EqualsAndHashCode;
import lombok.Value;
/**
 * 割増時間項目
 * @author Doan Duy Hung
 *
 */
@Value
@EqualsAndHashCode(callSuper = false)
public class PremiumItem {
	
	/**
	 * 	会社ID
	 */
	private String companyID;
	
	/**
	 * 	割増項目NO
	 */
	private ExtraTimeItemNo displayNumber;
	
	/**
	 * 名称
	 */
	private PremiumName name;

	/**
	 * 	使用区分
	 */
	private UseAttribute useAtr;

	public PremiumItem(String companyID, ExtraTimeItemNo displayNumber, PremiumName name, UseAttribute useAtr) {
		super();
		this.companyID = companyID;
		this.displayNumber = displayNumber;
		this.name = name;
		this.useAtr = useAtr;
	}
	
	/**
	 * 	[1] 割増項目に対応する日次の勤怠項目を取得する
	 * @return
	 */
	public List<Integer> getDaiLyAttendanceIdByNo() {
		switch(this.displayNumber.value) {
		case 1:
			return Arrays.asList(426, 1295, 1310, 1320, 1339, 1354, 1364, 1383, 1398, 1408, 1427, 1442, 1452, 1471,
					1486, 1496, 1515, 1530, 1540, 1559, 1574, 1584, 1603, 1618, 1628, 1647, 1662, 1672, 1691, 1706,
					1716, 1735, 1750, 1760, 1779, 1794, 1804, 1823, 1838, 1848, 1867, 1882, 1892, 1911, 1926, 1936,
					1955, 1970, 1980, 1999, 2014, 2024, 2043, 2058, 2068, 2087, 2102, 2112, 2131, 2146, 2156, 2175);
		case 2:
			return Arrays.asList(427, 1296, 1311, 1321, 1340, 1355, 1365, 1384, 1399, 1409, 1428, 1443, 1453, 1472,
					1487, 1497, 1516, 1531, 1541, 1560, 1575, 1585, 1604, 1619, 1629, 1648, 1663, 1673, 1692, 1707,
					1717, 1736, 1751, 1761, 1780, 1795, 1805, 1824, 1839, 1849, 1868, 1883, 1893, 1912, 1927, 1937,
					1956, 1971, 1981, 2000, 2015, 2025, 2044, 2059, 2069, 2088, 2103, 2113, 2132, 2147, 2157, 2176);
		case 3:
			return Arrays.asList(428, 1297, 1312, 1322, 1341, 1356, 1366, 1385, 1400, 1410, 1429, 1444, 1454, 1473,
					1488, 1498, 1517, 1532, 1542, 1561, 1576, 1586, 1605, 1620, 1630, 1649, 1664, 1674, 1693, 1708,
					1718, 1737, 1752, 1762, 1781, 1796, 1806, 1825, 1840, 1850, 1869, 1884, 1894, 1913, 1928, 1938,
					1957, 1972, 1982, 2001, 2016, 2026, 2045, 2060, 2070, 2089, 2104, 2114, 2133, 2148, 2158, 2177);
		case 4:
			return Arrays.asList(429, 1298, 1313, 1323, 1342, 1357, 1367, 1386, 1401, 1411, 1430, 1445, 1455, 1474,
					1489, 1499, 1518, 1533, 1543, 1562, 1577, 1587, 1606, 1621, 1631, 1650, 1665, 1675, 1694, 1709,
					1719, 1738, 1753, 1763, 1782, 1797, 1807, 1826, 1841, 1851, 1870, 1885, 1895, 1914, 1929, 1939,
					1958, 1973, 1983, 2002, 2017, 2027, 2046, 2061, 2071, 2090, 2105, 2115, 2134, 2149, 2159, 2178);
		case 5:
			return Arrays.asList(430, 1299, 1314, 1324, 1343, 1358, 1368, 1387, 1402, 1412, 1431, 1446, 1456, 1475,
					1490, 1500, 1519, 1534, 1544, 1563, 1578, 1588, 1607, 1622, 1632, 1651, 1666, 1676, 1695, 1710,
					1720, 1739, 1754, 1764, 1783, 1798, 1808, 1827, 1842, 1852, 1871, 1886, 1896, 1915, 1930, 1940,
					1959, 1974, 1984, 2003, 2018, 2028, 2047, 2062, 2072, 2091, 2106, 2116, 2135, 2150, 2160, 2179);
		case 6:
			return Arrays.asList(431, 1300, 1315, 1325, 1344, 1359, 1369, 1388, 1403, 1413, 1432, 1447, 1457, 1476,
					1491, 1501, 1520, 1535, 1545, 1564, 1579, 1589, 1608, 1623, 1633, 1652, 1667, 1677, 1696, 1711,
					1721, 1740, 1755, 1765, 1784, 1799, 1809, 1828, 1843, 1853, 1872, 1887, 1897, 1916, 1931, 1941,
					1960, 1975, 1985, 2004, 2019, 2029, 2048, 2063, 2073, 2092, 2107, 2117, 2136, 2151, 2161, 2180);
		case 7:
			return Arrays.asList(432, 1301, 1316, 1326, 1345, 1360, 1370, 1389, 1404, 1414, 1433, 1448, 1458, 1477,
					1492, 1502, 1521, 1536, 1546, 1565, 1580, 1590, 1609, 1624, 1634, 1653, 1668, 1678, 1697, 1712,
					1722, 1741, 1756, 1766, 1785, 1800, 1810, 1829, 1844, 1854, 1873, 1888, 1898, 1917, 1932, 1942,
					1961, 1976, 1986, 2005, 2020, 2030, 2049, 2064, 2074, 2093, 2108, 2118, 2137, 2152, 2162, 2181);
		case 8:
			return Arrays.asList(433, 1302, 1317, 1327, 1346, 1361, 1371, 1390, 1405, 1415, 1434, 1449, 1459, 1478,
					1493, 1503, 1522, 1537, 1547, 1566, 1581, 1591, 1610, 1625, 1635, 1654, 1669, 1679, 1698, 1713,
					1723, 1742, 1757, 1767, 1786, 1801, 1811, 1830, 1845, 1855, 1874, 1889, 1899, 1918, 1933, 1943,
					1962, 1977, 1987, 2006, 2021, 2031, 2050, 2065, 2075, 2094, 2109, 2119, 2138, 2153, 2163, 2182);
		case 9:
			return Arrays.asList(434, 1303, 1318, 1328, 1347, 1362, 1372, 1391, 1406, 1416, 1435, 1450, 1460, 1479,
					1494, 1504, 1523, 1538, 1548, 1567, 1582, 1592, 1611, 1626, 1636, 1655, 1670, 1680, 1699, 1714,
					1724, 1743, 1758, 1768, 1787, 1802, 1812, 1831, 1846, 1856, 1875, 1890, 1900, 1919, 1934, 1944,
					1963, 1978, 1988, 2007, 2022, 2032, 2051, 2066, 2076, 2095, 2110, 2120, 2139, 2154, 2164, 2183);
		default: // 10
			return Arrays.asList(435, 1304, 1319, 1329, 1348, 1363, 1373, 1392, 1407, 1417, 1436, 1451, 1461, 1480,
					1495, 1505, 1524, 1539, 1549, 1568, 1583, 1593, 1612, 1627, 1637, 1656, 1671, 1681, 1700, 1715,
					1725, 1744, 1759, 1769, 1788, 1803, 1813, 1832, 1847, 1857, 1876, 1891, 1901, 1920, 1935, 1945,
					1964, 1979, 1989, 2008, 2023, 2033, 2052, 2067, 2077, 2096, 2111, 2121, 2140, 2155, 2165, 2184);
		}
	}
	
	/**
	 * 	[2] 割増項目に対応する月次の勤怠項目を取得する
	 * @return
	 */
	public List<Integer> getMonthlyAttendanceIdByNo() {
		switch(this.displayNumber.value) {
		case 1:
			return Arrays.asList(378,2083);
		case 2: 
			return Arrays.asList(379,2084);
		case 3: 
			return Arrays.asList(380,2085);
		case 4: 
			return Arrays.asList(381,2086);
		case 5: 
			return Arrays.asList(382,2087);
		case 6: 
			return Arrays.asList(383,2088);
		case 7: 
			return Arrays.asList(384,2089);
		case 8: 
			return Arrays.asList(385,2090);
		case 9: 
			return Arrays.asList(386,2091);
		default : //10
			return Arrays.asList(387,2092);
		}
	}
	
	/**
	 * 	[3] 利用できない日次の勤怠項目を取得する
	 * @return
	 */
	public List<Integer> getDailyAttendanceIdNotAvailable() {
		if(this.useAtr == UseAttribute.NotUse) {
			return this.getDaiLyAttendanceIdByNo();
		}
		return new ArrayList<>();
	}
	
	/**
	 * 	[4] 利用できない月次の勤怠項目を取得する
	 * @return
	 */
	public List<Integer> getMonthlyAttendanceIdNotAvailable() {
		if(this.useAtr == UseAttribute.NotUse) {
			return this.getMonthlyAttendanceIdByNo();
		}
		return new ArrayList<>();
	}
}
